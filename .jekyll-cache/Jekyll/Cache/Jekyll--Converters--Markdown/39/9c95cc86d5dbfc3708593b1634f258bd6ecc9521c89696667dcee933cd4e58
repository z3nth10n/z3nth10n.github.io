I"È6<p>All the tutorials that I have read at the moment about <strong>how to install vsftpd</strong> start at the same place, <strong>warning that the FTP protocol is insecure because it is not encrypted</strong>. This is true, but it is also true that if you want to set up a local FTP server for your own use, using vsftpd is the fastest and easiest solution. For this reason I decided to write this <strong>tutorial on how to install vsftpd on Linux Ubuntu and configure it correctly step by step</strong>.</p>

<p><img src="https://www.vozidea.com/wp-content/uploads/2017/03/como-instalar-vsftpd-en-Linux-Ubuntu.png" alt="How to install vsftpd in Linux Ubuntu and configure it correctly" title="How to install vsftpd in Linux Ubuntu and configure it correctly" /></p>

<p>It is also necessary that you know the alternatives to FTP considered secure, where we find the protocols <strong>sFTP</strong> and <strong>SCP</strong> as the most used. We can also configure vsftpd to use a secure connection under SSL / TLS.</p>

<p><strong>Although it is relatively easy to configure vsftp with SSL / TLS, I will not include it in this tutorial, since the objective is to make a quick and simple explanation.</strong> You may dedicate a tutorial to that aspect later.</p>

<h2 id="how-to-install-vsftpd-on-linux-ubuntu-and-configure-it-step-by-step">How to install vsftpd on Linux Ubuntu and configure it step by step.</h2>

<p>I will try to make this tutorial valid for both recent versions of Ubuntu and for older versions. At the time of writing this article I am working with [Ubuntu 18.04] (http://releases.ubuntu.com/18.04/), but the tutorial will also be compatible with Ubuntu 16.04 and will surely also work for previous versions.</p>

<p>Before fully entering the <strong>vsftpd</strong> configuration, remember that in this tutorial <strong>I am not going to include the firewall configuration</strong>, since each user will have installed the one they like the most. With this I want to remind you to manage the rules of the firewall to allow connections to the FTP server, which usually use ports 20 and 21 unless we configure it in another way. <strong>If you use no firewall, you will not need to do any of this.</strong></p>

<p><strong>I have chosen vsftpd as FTP server because it is very easy to install and use.</strong> We also find it in the official Ubuntu repositories, which simplifies our task much more.</p>

<h3 id="install-vsftpd-in-ubuntu">Install vsftpd in Ubuntu.</h3>

<p>To <strong>install vsftpd in Ubuntu 16.04 &amp;&amp; 18.04</strong> we can use the command:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>apt <span class="nb">install </span>vsftpd
</code></pre></div></div>

<p>If we use the version <strong>Ubuntu 14.04</strong>, the command that we will use is:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>apt-get <span class="nb">install </span>vsftpd
</code></pre></div></div>

<p>Before proceeding further, we must know the commands to start, stop and restart the vsftpd daemon. <strong>In Ubuntu 16.04 &amp;&amp; 18.04 the commands to start, stop and restart vsftpd are:</strong></p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>systemctl restart vsftpd
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>systemctl start vsftpd
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>systemctl stop vsftpd
</code></pre></div></div>

<p><strong>In Ubuntu 10.04 the commands to start, stop and restart vsftpd are:</strong></p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>service vsftpd restart
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>service vsftpd start
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>service vsftpd stop
</code></pre></div></div>

<h3 id="configure-vsftpd-in-ubuntu">Configure vsftpd in Ubuntu.</h3>

<p>To configure vsftpd Iâ€™m going to start from scratch, adding a new user to give him the appropriate permissions so he can upload and download files to a certain folder. This user will be locked in his <code class="highlighter-rouge">home</code> folder, so he will not be able to access any other part of the operating system. In this way, we get a more secure configuration.</p>

<p>To add the user we execute the command:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>adduser z3nth10n
</code></pre></div></div>

<p>After executing this command, you will ask us to enter a password.</p>

<p>I make a small paragraph to remember the tutorial of <a href="https://www.vozidea.com/como-anadir-y-deliminar-usuarios-en-linux">how to add and remove users in Linux</a> that we wrote some time ago.</p>

<p>We will use this user <code class="highlighter-rouge">z3nth10n</code> to access the FTP server. We should know that the chroot security system of vsftp encloses the user in its <code class="highlighter-rouge">home</code> folder, so in our case the chroot would be <code class="highlighter-rouge">/home/z3nth10n</code>. In addition, vsftp handles chroot cages so that two conditions must be met:</p>

<ul>
  <li>** The owner of the chroot folder and the user who connects via FTP can not be the same. **</li>
  <li>** The chroot folder can not have write permissions. **</li>
</ul>

<p>So we must change the owner of this folder with the following command:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo chown </span>root:root /home/z3nth10n
</code></pre></div></div>

<p>If we want the user to be able to upload files to the FTP server, we will need to create a folder:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo mkdir</span> /home/z3nth10n/ftp_subidas
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo chown </span>z3nth10n:z3nth10n /home/z3nth10n/ftp_subidas
</code></pre></div></div>

<p><strong>Something very important is to remove the access to the command interpreter <em>(shell)</em> from the user <code class="highlighter-rouge">z3nth10n</code> that we added. I insist that it is very important because it can pose a serious security risk.</strong> The problem is that when removing access to the shell, vsftpd does not allow us to access the FTP server because the user does not have a valid shell assigned. To solve this <strong>we are going to create a custom shell, which we will add to the list of valid shells and finally we will assign this shell to our user</strong>.</p>

<p>We start by running the following command:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>nano /bin/ftponly
</code></pre></div></div>

<p>We add the following lines and save the file:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/sh</span>
<span class="nb">echo</span> <span class="s2">"This account only has FTP access."</span>
</code></pre></div></div>

<p>We give execution permissions to the <code class="highlighter-rouge">ftponly</code> shell with the command:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo chmod </span>a+x /bin/ftponly
</code></pre></div></div>

<p>We edit the list of valid shells with the command:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>nano /etc/shells
</code></pre></div></div>

<p>We add <code class="highlighter-rouge">/bin/ftponly</code> to the end of the list:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># /etc/shells: valid login shells</span>
/bin/sh
/bin/dash
/bin/bash
/bin/rbash
/bin/ftponly
</code></pre></div></div>

<p>We assign the <code class="highlighter-rouge">ftponly</code> shell to our user:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>usermod z3nth10n <span class="nt">-s</span> /bin/ftponly
</code></pre></div></div>

<p><strong>Important note:</strong> In some tutorials that I have been able to read, do not create this custom <code class="highlighter-rouge">ftponly</code> shell, but use the system shell <code class="highlighter-rouge">/usr/sbin/nologin</code> or <code class="highlighter-rouge">/sbin/nologin</code>. As there are several system services that use this shell <code class="highlighter-rouge">nologin</code>, <strong>we should not use it or we will be creating a serious security problem</strong>.</p>

<p>At this point, we have our user ready. Now we proceed to <strong>edit the configuration file of vsftpd</strong> with the command:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>nano /etc/vsftpd.conf
</code></pre></div></div>

<p>You have to modify the file by removing the <code class="highlighter-rouge">#</code> character in the corresponding parts and making the changes as shown below:</p>

<div class="language-apache highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">...</span>
<span class="err">Â </span>
<span class="c"># Allow anonymous FTP? (Disabled by default).</span>
anonymous_enable = NO
<span class="c">#</span>
<span class="c"># Uncomment this to allow local users to log in.</span>
local_enable = YES
<span class="c">#</span>
<span class="c"># Uncomment this to enable any form of FTP write command.</span>
write_enable = YES
<span class="c">#</span>
<span class="err">Â </span>
<span class="err">...</span>
<span class="err">Â </span>
<span class="c"># You can restrict local users to their home directories. See the FAQ for</span>
<span class="c"># the possible risks in this before using chroot_local_user or</span>
<span class="c"># chroot_list_enable below.</span>
chroot_local_user = YES
<span class="c">#</span>
<span class="err">...</span>
</code></pre></div></div>

<p>We only need to restart vsftpd with the command that we showed you at the beginning of this tutorial and we went on to prove that everything works correctly. Itâ€™s that simple to install vsftpd on Linux Ubuntu.</p>

<p><img src="https://www.vozidea.com/wp-content/uploads/2017/03/probar-servidor-vsftpd.png" alt="Test server vsftpd" title="Test server vsftpd" /></p>

<p>To test the FTP server you can try to connect using <a href="https://dl3.cdn.filezilla-project.org/client/FileZilla_3.41.2_win64-setup.exe?h=zYebHHH4N4ZjxSQ0IsqTmQ&amp;x=1554261497">an FTP client such as FileZilla</a>.</p>

<h2 id="troubleshooting">Troubleshooting</h2>

<p>Maybe it has already happened to you like me that you still canâ€™t connectâ€¦ Here I will collect a list of possible error cases:</p>

<ul>
  <li><strong>Error: 500 OOPS: vsftpd: refusing to run with writable root inside chroot()</strong>
    <ul>
      <li>The solution is simple, you just have to add this line to your <code class="highlighter-rouge">vsftpd.conf</code>:<code class="highlighter-rouge"> allow_writeable_chroot = YES</code></li>
      <li>Restart the service</li>
    </ul>
  </li>
  <li><strong>How to change port from 21 to another?</strong>
    <ul>
      <li>Add this line to your <code class="highlighter-rouge">vsftpd.conf</code>: <code class="highlighter-rouge">listen_port=&lt;port numer&gt;</code> (example: <code class="highlighter-rouge">listen_port=2121</code>)</li>
      <li>Restart the service</li>
    </ul>
  </li>
  <li><strong>Failed to retrieve directory listing</strong>
    <ul>
      <li>This is because you need to configure the FTP in passive mode since a Firewall from your Ubuntu or from the client-side is blocking the connection</li>
      <li>You will need to enable passive mode in your <code class="highlighter-rouge">vsftpd.conf</code>:</li>
    </ul>
  </li>
</ul>

<div class="language-apache highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pasv_enable = YES
pasv_min_port = 9010
pasv_max_port = 9020
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>* These ports must be open (on the server-side, via port-forwarind or by using Firewall rules)...
* Restart the service
* Configure a new session in your Filezilla to be able to access in passive mode, [there is a tutorial](https://hoststud.com/resources/resolved-error-connection-timeout-after-20-seconds-of-inactivity.368/).
* It would not be necessary to change the general options to Passive, within your new site, go to "Transfer Options" and change to passive mode.
</code></pre></div></div>

<p><strong>Best regards!</strong></p>
:ET